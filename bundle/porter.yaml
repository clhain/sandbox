schemaVersion: 1.0.0-alpha.1
name: sandbox-gke-porter
version: 0.1.2
description: "Sandbox GKE Cluster Porter Bundle"
registry: ghcr.io/clhain
dockerfile: Dockerfile.tmpl

mixins:
  - terraform:
      clientVersion: 1.3.1
  - exec:
  - helm3:
      clientVersion: v3.7.2
      repositories:
        sandbox-charts:
          url: "https://clhain.github.io/sandbox-helm-charts"
  - kubernetes:
      clientVersion: v1.20.13

state:
  - name: tfstate
    path: terraform/terraform.tfstate
  - name: tfvars
    path: terraform/terraform.tfvars.json

outputs:
  - name: tfoutput.json
    type: file
    path: /cnab/app/tfoutput.json
    applyTo:
      - install
      - upgrade
  - name: cluster_name
    type: string
    applyTo:
      - install
      - upgrade
  - name: cluster_ingress_ip
    type: string
    applyTo:
      - install
      - upgrade
  - name: kubeconfig_content
    type: string
    applyTo:
      - install
      - upgrade

credentials:
  - name: gcloud_key_file
    path: /cnab/app/gcloud.json
    description: The Service Account Key file (json format) to use for deploying.
  - name: oidc_client_secret
    env: oidc_client_secret
    description: The oidc client secret to use for Oauth2 Proxy + ArgoCD

parameters:
# ---------------------------------------------------------------------------------------------------------------------
# REQUIRED PARAMETERS
# These variables are expected to be passed in by the operator.
# ---------------------------------------------------------------------------------------------------------------------
  - name: project
    type: string
    env: TF_VAR_project
    description: "The project ID where all resources will be launched."
  - name: domain
    type: string
    description: The domain under which all proxied host records will be created.
  - name: oidc_client_id
    env: oidc_client_id
    description: The oidc client id to use
  - name: oidc_issuer_url
    tpye: string
    default: ''
    description: The oidc issuer to use for validating tokens.
  - name: oidc_email_domains
    env: oidc_email_domains
    description: The list of oidc permitted user email domains.
    default: "*"
  - name: letsencrypt-contact-email
    type: string
    description: The email address to use as contact for letsencrypt certs.
# ---------------------------------------------------------------------------------------------------------------------
# OPTIONAL PARAMETERS
# These parameters have reasonable defaults.
# ---------------------------------------------------------------------------------------------------------------------
  - name: cluster_name
    type: string
    default: my-sandbox-cluster
    env: TF_VAR_cluster_name
    description: "The name of the Kubernetes cluster."
  - name: cluster_service_account_name
    type: string
    env: TF_VAR_cluster_service_account_name
    default: "my-sandbox-cluster-sa"
    description: The GCP service account to use on the GKE cluster nodes.
  - name: create_service_account
    type: string
    env: TF_VAR_create_service_account
    default: "true"
  - name: machine_type
    type: string
    default: e2-standard-2
    env: TF_VAR_machine_type
    description: The GCP machine type to use for the cluster nodes.
  - name: location
    type: string
    env: TF_VAR_location
    default: us-central1
    description: "The location (region or zone) of the GKE cluster."
  - name: region
    type: string
    default: us-central1
    env: TF_VAR_region
    description: "The region for the network. If the cluster is regional, this must be the same region. Otherwise, it should be the region of the zone."
  - name: network_name
    type: string
    env: TF_VAR_network_name
    default: default
    description: The GCP network name to deploy cluster nodes into (e.g. default).
  - name: initial_node_count
    type: string
    env: TF_VAR_initial_node_count
    default: "1"
    description: The number of GKE nodes to deploy in each region (multiply by 3 for cluster size).
  - name: max_node_count
    type: string
    env: TF_VAR_max_node_count
    default: "5"
    description: The max number of GKE nodes to autoscale to (x3).
  - name: preemptible_nodes
    type: string
    env: TF_VAR_preemptible_nodes
    default: "true"
    description: Whether to use GKE pre-emtible nodes.
  - name: loadbalancer-type
    type: string
    default: "External"
    env: TF_VAR_cluster_ingress_ip_type
    description: The GCP loadbalancer type to use with KIC (Internal or External).
  - name: master_ipv4_cidr_block
    type: string
    default: "10.5.0.0/28"
    env: TF_VAR_master_ipv4_cidr_block
    description: "The IP range in CIDR notation (size must be /28) to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network."
  - name: vpc_cidr_block
    type: string
    default: "10.3.0.0/16"
    env: TF_VAR_vpc_cidr_block
    description: "The IP address range of the VPC in CIDR notation. A prefix of /16 is recommended. Do not use a prefix higher than /27."
  - name: vpc_secondary_cidr_block
    type: string
    default: "10.4.0.0/16"
    env: TF_VAR_vpc_secondary_cidr_block
    description: "The IP address range of the VPC's secondary address range in CIDR notation. A prefix of /16 is recommended. Do not use a prefix higher than /27."
  - name: enable_confidential_nodes
    type: string
    default: "false"
    env: TF_VAR_enable_confidential_nodes
  - name: enable_network_policy
    type: string
    default: "false"
    env: TF_VAR_enable_network_policy
  - name: enable_vertical_pod_autoscaling
    type: string
    default: "true"
    env: TF_VAR_enable_vertical_pod_autoscaling
    description: "Enable vertical pod autoscaling"
  - name: kubeconfig_path
    type: string
    env: KUBECONFIG
    default: "/cnab/app/terraform/kubeconfig"
    description: The location to write the GKE kubeconfig after installed.

  ## Sandbox-Base PARAMS
  - name: installation-namespace
    type: string
    default: "argocd"
    description: The namespace to install Argo CD into.
  - name: sandbox_apps_helm_revision
    type: string
    default: sandbox-apps-0.0.4 # sandbox_apps_helm_revision (comment for automation, do not remove)
    description: The Git Revision (i.e. HEAD or tag name of sandbox-apps helm chart to deploy).
  - name: sandbox_target_revision
    type: string
    default: v0.1.1 # sandbox_target_revision (comment for automation, do not remove)
    description: The Git Revision (i.e. HEAD or tag name of sandbox apps to deploy).

  #
  #  Helm Override Values Files
  #
  - name: sandbox-values
    type: string
    default: ''
    path: /cnab/app/helm/sandbox-base/extra-values.yaml



install:
  #
  # Base Cluster Install Steps
  #
  - terraform:
      description: "Install Terraform assets"
      outputs:
        - name: cluster_name
        - name: kubeconfig_content
        - name: cluster_ingress_ip
        - name: kubeconfig_file
  - exec:
      description: "terraform output to file"
      command: ./helpers.sh
      arguments:
        - "tf_output"

  #
  # Sandbox Base Helm Install Steps
  #
  - helm3:
      description: "Update Sandbox Base Apps on the cluster"
      name: sandbox-base
      namespace: "{{ bundle.parameters.installation-namespace }}"
      chart: sandbox-charts/sandbox-base
      upsert: true
      wait: true
      set:
        clusterIngressIP: "{{ bundle.outputs.cluster_ingress_ip }}"
        clusterDomain: "{{ bundle.parameters.domain }}"
        oidcClientID: "{{ bundle.parameters.oidc_client_id }}"
        oidcClientSecret: "{{ bundle.credentials.oidc_client_secret }}"
        oidcIssuerURL: "{{ bundle.parameters.oidc_issuer_url }}"
        letsEncryptContactEmail: "{{ bundle.parameters.letsencrypt-contact-email }}"
        oidcPermittedEmailDomains: "{{ bundle.parameters.oidc_email_domains }}"
        appsHelmSourceTargetRevision: "{{ bundle.parameters.sandbox_apps_helm_revision }}"
        appsSourceTargetRevision: "{{ bundle.parameters.sandbox_target_revision }}"
      values:
        - /cnab/app/helm/sandbox-base/extra-values.yaml

  - exec:
      description: "Print success message"
      command: ./helpers.sh
      arguments:
        - "success-message"
      envs: # Environment variables to be added to the command execution environment
        CLUSTER_NAME: "{{ bundle.parameters.cluster_name }}"
        CLUSTER_DOMAIN: "{{ bundle.parameters.domain }}"
        INSTALL_NS: "{{ bundle.parameters.installation-namespace }}"
        INGRESS_IP: "{{ bundle.outputs.cluster_ingress_ip }}"

upgrade:
  #
  # Base Cluster upgrade Steps
  #
  - terraform:
      description: "Upgrade Terraform assets"
      outputs:
        - name: cluster_name
        - name: kubeconfig_content
        - name: cluster_ingress_ip
  - exec:
      description: "terraform output to file"
      command: ./helpers.sh
      arguments:
        - "tf_output"

  #
  # Sandbox Base Helm Upgrade Steps
  #
  - helm3:
      description: "Update Sandbox Base Apps on the cluster"
      name: sandbox-base
      namespace: "{{ bundle.parameters.installation-namespace }}"
      chart: sandbox-charts/sandbox-base
      upsert: true
      wait: true
      set:
        clusterIngressIP: "{{ bundle.outputs.cluster_ingress_ip }}"
        clusterDomain: "{{ bundle.parameters.domain }}"
        oidcClientID: "{{ bundle.parameters.oidc_client_id }}"
        oidcClientSecret: "{{ bundle.credentials.oidc_client_secret }}"
        oidcIssuerURL: "{{ bundle.parameters.oidc_issuer_url }}"
        letsEncryptContactEmail: "{{ bundle.parameters.letsencrypt-contact-email }}"
        oidcPermittedEmailDomains: "{{ bundle.parameters.oidc_email_domains }}"
        appsHelmSourceTargetRevision: "{{ bundle.parameters.sandbox_apps_helm_revision }}"
        appsSourceTargetRevision: "{{ bundle.parameters.sandbox_target_revision }}"
      values:
        - /cnab/app/helm/sandbox-base/extra-values.yaml

  - exec:
      description: "Print success message"
      command: ./helpers.sh
      arguments:
        - "success-message"
      envs:
        CLUSTER_NAME: "{{ bundle.parameters.cluster_name }}"
        CLUSTER_DOMAIN: "{{ bundle.parameters.domain }}"
        INSTALL_NS: "{{ bundle.parameters.installation-namespace }}"
        INGRESS_IP: "{{ bundle.outputs.cluster_ingress_ip }}"

uninstall:
  - terraform:
      description: "Uninstall Terraform assets"

show:
  - terraform:
      description: "Invoke 'terraform show'"

printVersion:
  - terraform:
      description: "Invoke 'terraform version'"
      arguments: 
        - "version"
