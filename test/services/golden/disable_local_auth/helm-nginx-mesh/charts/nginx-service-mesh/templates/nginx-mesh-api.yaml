-n
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
imagePullSecrets:
- name: nginx-mesh-registry-key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mesh-config
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
binaryData:
  mesh-config.json: "ewogICAgImFjY2Vzc0NvbnRyb2xNb2RlIjogImFsbG93IiwKICAgICJhcGkiOiB7CiAgICAgICJhZGRyZXNzIjogIm5naW54LW1lc2gtYXBpLm9hdXRoLXByb3h5IiwKICAgICAgImNvbnRhaW5lclBvcnQiOiA4NDQzLAogICAgICAicG9ydCI6IDQ0MwogICAgfSwKICAgICJhdXRvSW5qZWN0b3JQb3J0IjogOTQ0MywKICAgICJjbGllbnRNYXhCb2R5U2l6ZSI6ICIxbSIsCiAgICAiZW52aXJvbm1lbnQiOiAia3ViZXJuZXRlcyIsCiAgICAiaXNVRFBFbmFibGVkIjogZmFsc2UsCiAgICAiaW5qZWN0aW9uIjogewogICAgICAiZGlzYWJsZWROYW1lc3BhY2VzIjogW10sCiAgICAgICJlbmFibGVkTmFtZXNwYWNlcyI6IFtdLAogICAgICAiaXNBdXRvSW5qZWN0RW5hYmxlZCI6IGZhbHNlCiAgICB9LAogICAgImxvYWRCYWxhbmNpbmdNZXRob2QiOiAibGVhc3RfdGltZSIsCiAgICAibXRscyI6IHsKICAgICAgIm1vZGUiOiAicGVybWlzc2l2ZSIsCiAgICAgICJjYVRUTCI6ICI3MjBoIiwKICAgICAgInN2aWRUVEwiOiAiMWgiLAogICAgICAiY2FLZXlUeXBlIjogImVjLXAyNTYiCiAgICB9LAogICAgIm5hbWVzcGFjZSI6ICJvYXV0aC1wcm94eSIsCiAgICAibmdpbnhFcnJvckxvZ0xldmVsIjogIndhcm4iLAogICAgIm5naW54TG9nRm9ybWF0IjogImRlZmF1bHQiLAogICAgInByb21ldGhldXNBZGRyZXNzIjogIiIsCiAgICAicHJveHkiOiB7CiAgICAgICJwb3J0cyI6IHsKICAgICAgICAiaW5jb21pbmciOiA4ODg4LAogICAgICAgICJpbmNvbWluZ0dycGMiOiA4ODkxLAogICAgICAgICJpbmNvbWluZ0dycGNQZXJtaXNzaXZlIjogODg5MywKICAgICAgICAiaW5jb21pbmdOb3RJbktleXZhbCI6IDg5MDMsCiAgICAgICAgImluY29taW5nUGVybWlzc2l2ZSI6IDg4OTAsCiAgICAgICAgImluY29taW5nUmVkaXJlY3QiOiA4OTAxLAogICAgICAgICJpbmNvbWluZ1RjcCI6IDg5MDQsCiAgICAgICAgImluY29taW5nVGNwRGVueSI6IDg5MDUsCiAgICAgICAgImluY29taW5nVGNwUGVybWlzc2l2ZSI6IDg5MDcsCiAgICAgICAgIm91dGdvaW5nVWRwIjogODkwOCwKICAgICAgICAiaW5jb21pbmdVZHAiOiA4OTA5LAogICAgICAgICJtZXRyaWNzIjogODg4NywKICAgICAgICAib3V0Z29pbmciOiA4ODg5LAogICAgICAgICJvdXRnb2luZ0RlZmF1bHRFZ3Jlc3MiOiA4ODk0LAogICAgICAgICJvdXRnb2luZ0dycGMiOiA4ODkyLAogICAgICAgICJvdXRnb2luZ05vdEluS2V5dmFsIjogODkwMiwKICAgICAgICAib3V0Z29pbmdSZWRpcmVjdCI6IDg5MDAsCiAgICAgICAgIm91dGdvaW5nVGNwIjogODkwNiwKICAgICAgICAicGx1c0FwaSI6IDg4ODYsCiAgICAgICAgInJlZGlyZWN0SGVhbHRoUG9ydCI6IDg4OTUsCiAgICAgICAgInJlZGlyZWN0SGVhbHRoUG9ydEhUVFBTIjogODg5NgogICAgICB9LAogICAgICAidHJhbnNwYXJlbnQiOiBmYWxzZQogICAgfSwKICAgICJyZWdpc3RyeUtleU5hbWUiOiAiIiwKICAgICJzaWRlY2FySW1hZ2UiOiB7CiAgICAgICJpbWFnZSI6ICJkb2NrZXItcmVnaXN0cnkubmdpbnguY29tL25zbS9uZ2lueC1tZXNoLXNpZGVjYXI6MS41LjAiLAogICAgICAibmFtZSI6ICJuZ2lueC1tZXNoLXNpZGVjYXIiCiAgICB9LAogICAgInNpZGVjYXJJbml0SW1hZ2UiOiB7CiAgICAgICJpbWFnZSI6ICJkb2NrZXItcmVnaXN0cnkubmdpbnguY29tL25zbS9uZ2lueC1tZXNoLWluaXQ6MS41LjAiLAogICAgICAibmFtZSI6ICJuZ2lueC1tZXNoLWluaXQiCiAgICB9LAogICAgInRyYWNpbmciOiB7fSwKICAgICJ0ZWxlbWV0cnkiOiB7CiAgICAgICAgImV4cG9ydGVycyI6IHsKICAgICAgICAgICAgIm90bHAiOiB7CiAgICAgICAgICAgICAgICAiaG9zdCI6ICJvdGMtY29sbGVjdG9yLm9wZW50ZWxlbWV0cnktb3BlcmF0b3Iuc3ZjIiwKICAgICAgICAgICAgICAgICJwb3J0IjogNDMxNwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAic2FtcGxlclJhdGlvIjogMQogICAgfSwKICAgICJ0cnVzdERvbWFpbiI6ICJleGFtcGxlLm9yZyIKICB9Cg=="
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups:
  - ''
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - services
  - endpoints
  verbs:
  - "*"
- apiGroups:
  - ''
  resources:
  - secrets
  - pods
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - daemonsets
  verbs:
  - list
  - watch
- apiGroups:
  - split.smi-spec.io
  resources:
  - trafficsplits
  verbs:
  - "*"
- apiGroups:
  - access.smi-spec.io
  resources:
  - traffictargets
  verbs:
  - "*"
- apiGroups:
  - specs.smi-spec.io
  - specs.smi.nginx.com
  resources:
  - httproutegroups
  - tcproutes
  - ratelimits
  - circuitbreakers
  verbs:
  - "*"
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  resourceNames:
  - sidecar-injector-webhook-cfg.internal.builtin.nsm.nginx
  verbs:
  - get
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  resourceNames:
  - validating-webhook-cfg.internal.builtin.nsm.nginx
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-mesh-api.internal.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: nginx-mesh-api
  namespace: oauth-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-mesh-api-svc.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: nginx-mesh-api
    namespace: oauth-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - daemonsets
  resourceNames:
  - spire-server
  - spire-agent
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-mesh-api.internal.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: nginx-mesh-api
  namespace: oauth-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-mesh-api-svc.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: nginx-mesh-api
    namespace: oauth-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-mesh-webhook
  labels:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  type: ClusterIP
  ports:
  - name: admission
    port: 443
    targetPort: 9443
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-mesh-api
      app.kubernetes.io/part-of: nginx-service-mesh
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-mesh-api
        app.kubernetes.io/part-of: nginx-service-mesh
        spiffe.io/spiffeid: "true"
    spec:
      serviceAccountName: nginx-mesh-api
      containers:
      - name: nginx-mesh-api
        image: docker-registry.nginx.com/nsm/nginx-mesh-api:1.5.0
        imagePullPolicy: IfNotPresent
        args:
        - "-meshconfig=/etc/config/mesh-config.json"
        - "-tlsDir=/tmp/webhooks"
        - "-logtostderr"
        - "-v=3"
        env:
        - name: PULL_POLICY
          value: IfNotPresent
        - name: MY_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet:
            path: "/healthz"
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsUser: 2102
          capabilities:
            drop:
              - all
            add:
              - NET_ADMIN
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
        volumeMounts:
        - name: config-volume
          mountPath: "/etc/config"
        - name: spire-agent-socket
          mountPath: "/run/spire/sockets"
      volumes:
      - name: config-volume
        configMap:
          name: mesh-config
          items:
          - key: mesh-config.json
            path: mesh-config.json
      - name: spire-agent-socket
        hostPath:
          path: "/run/spire/sockets"
          type: DirectoryOrCreate
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/apiservice: "true"
  name: v1alpha1.nsm.nginx.com
spec:
  group: nsm.nginx.com
  groupPriorityMinimum: 100
  service:
    name: nginx-mesh-api
    namespace: oauth-proxy
    port: 443
  version: v1alpha1
  versionPriority: 100
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: sidecar-injector-webhook-cfg.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/webhook: "true"
webhooks:
- name: nginx-mesh-api.sidecar.injector
  namespaceSelector:
    matchExpressions:
    - key: injector.nsm.nginx.com/auto-inject
      operator: NotIn
      values:
      - 'false'
  clientConfig:
    service:
      name: nginx-mesh-webhook
      namespace: oauth-proxy
      path: "/inject"
  sideEffects: None
  admissionReviewVersions:
  - v1
  - v1beta1
  rules:
  - apiGroups:
    - ''
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validating-webhook-cfg.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/webhook: "true"
webhooks:
- name: nginx-mesh-api.policy.validator
  clientConfig:
    service:
      name: nginx-mesh-webhook
      namespace: oauth-proxy
      path: "/validate"
  sideEffects: None
  admissionReviewVersions:
  - v1
  - v1beta1
  rules:
  - apiGroups:
    - split.smi-spec.io
    apiVersions:
    - "*"
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - trafficsplits
  - apiGroups:
    - specs.smi-spec.io
    apiVersions:
    - "*"
    operations:
    - CREATE
    - UPDATE
    resources:
    - httproutegroups
  - apiGroups:
    - specs.smi.nginx.com
    apiVersions:
    - "*"
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - ratelimits
---
