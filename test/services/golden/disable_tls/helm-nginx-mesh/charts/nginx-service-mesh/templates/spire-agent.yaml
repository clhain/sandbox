-n
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-agent
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
imagePullSecrets:
- name: nginx-mesh-registry-key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-agent
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
data:
  agent.conf: "agent {\n  data_dir = \"/run/spire\"\n  log_level = \"DEBUG\"\n  server_address = \"spire-server\"\n  server_port = \"8081\"\n  socket_path = \"/run/spire/sockets/agent.sock\"\n  trust_bundle_path = \"/run/spire/bundle/bundle.crt\"\n  trust_domain = \"example.org\"\n}\n\nplugins {\n  NodeAttestor \"k8s_psat\" {\n    plugin_data {\n\t    cluster = \"nginx-mesh\"\n    }\n  }\n\n  KeyManager \"memory\" {\n    plugin_data {\n    }\n  }\n\n  WorkloadAttestor \"k8s\" {\n    plugin_data {\n      skip_kubelet_verification = true\n    }\n  }\n\n  WorkloadAttestor \"unix\" {\n      plugin_data {\n      }\n  }\n}\n"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-agent.security.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - nodes
  - nodes/proxy
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-agent.security.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-agent.security.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: spire-agent
  namespace: oauth-proxy
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spire-agent
  labels:
    app.kubernetes.io/name: spire-agent
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: spire-agent
      app.kubernetes.io/part-of: nginx-service-mesh
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spire-agent
        app.kubernetes.io/part-of: nginx-service-mesh
    spec:
      serviceAccountName: spire-agent
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      - name: init
        image: bitnami/kubectl
        command:
        - /bin/sh
        - -c
        - |
          while $(kubectl -n oauth-proxy wait --for=condition=Ready pod -l app.kubernetes.io/name=spire-server > /dev/null); [ $? -ne 0 ]; do
            sleep 1
          done
      containers:
      - name: spire-agent
        image: gcr.io/spiffe-io/spire-agent:1.3.2
        imagePullPolicy: IfNotPresent
        args:
        - "-config"
        - "/run/spire/config/agent.conf"
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: spire-config
          mountPath: "/run/spire/config"
          readOnly: true
        - name: spire-bundle
          mountPath: "/run/spire/bundle"
        - name: spire-agent-socket
          mountPath: "/run/spire/sockets"
          readOnly: false
        - name: spire-token
          mountPath: "/var/run/secrets/tokens"
        livenessProbe:
          exec:
            command:
            - "/opt/spire/bin/spire-agent"
            - healthcheck
            - "-shallow"
            - "-socketPath"
            - "/run/spire/sockets/agent.sock"
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - "/opt/spire/bin/spire-agent"
            - healthcheck
            - "-socketPath"
            - "/run/spire/sockets/agent.sock"
          initialDelaySeconds: 5
          periodSeconds: 5
      
      volumes:
      - name: spire-config
        configMap:
          name: spire-agent
      - name: spire-bundle
        configMap:
          name: spire-bundle
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: DirectoryOrCreate
      
      - name: spire-token
        projected:
          sources:
          - serviceAccountToken:
              audience: spire-server
              expirationSeconds: 7200
              path: spire-agent
---
