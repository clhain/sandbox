apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
imagePullSecrets:
- name: nginx-mesh-registry-key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mesh-config
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
binaryData:
  mesh-config.json: "ewogICAgImFjY2Vzc0NvbnRyb2xNb2RlIjogImFsbG93IiwKICAgICJhcGkiOiB7CiAgICAgICJhZGRyZXNzIjogIm5naW54LW1lc2gtYXBpLmRlZmF1bHQiLAogICAgICAiY29udGFpbmVyUG9ydCI6IDg0NDMsCiAgICAgICJwb3J0IjogNDQzCiAgICB9LAogICAgImF1dG9JbmplY3RvclBvcnQiOiA5NDQzLAogICAgImNsaWVudE1heEJvZHlTaXplIjogIjFtIiwKICAgICJlbnZpcm9ubWVudCI6ICJrdWJlcm5ldGVzIiwKICAgICJpc1VEUEVuYWJsZWQiOiBmYWxzZSwKICAgICJlbmFibGVkTmFtZXNwYWNlcyI6IFsgIF0sCiAgICAiaXNBdXRvSW5qZWN0RW5hYmxlZCI6ICBmYWxzZSAsCiAgICAiaW5qZWN0aW9uIjogewogICAgICAiZGlzYWJsZWROYW1lc3BhY2VzIjogW10sCiAgICAgICJlbmFibGVkTmFtZXNwYWNlcyI6IFsgIF0sCiAgICAgICJpc0F1dG9JbmplY3RFbmFibGVkIjogIGZhbHNlIAogICAgfSwKICAgICJsb2FkQmFsYW5jaW5nTWV0aG9kIjogImxlYXN0X3RpbWUiLAogICAgIm10bHMiOiB7CiAgICAgICJtb2RlIjogInBlcm1pc3NpdmUiLAogICAgICAiY2FUVEwiOiAiNzIwaCIsCiAgICAgICJzdmlkVFRMIjogIjFoIiwKICAgICAgImNhS2V5VHlwZSI6ICJlYy1wMjU2IgogICAgfSwKICAgICJuYW1lc3BhY2UiOiAiZGVmYXVsdCIsCiAgICAibmdpbnhFcnJvckxvZ0xldmVsIjogIndhcm4iLAogICAgIm5naW54TG9nRm9ybWF0IjogImRlZmF1bHQiLAogICAgInByb21ldGhldXNBZGRyZXNzIjogIiIsCiAgICAicHJveHkiOiB7CiAgICAgICJwb3J0cyI6IHsKICAgICAgICAiaW5jb21pbmciOiA4ODg4LAogICAgICAgICJpbmNvbWluZ0dycGMiOiA4ODkxLAogICAgICAgICJpbmNvbWluZ0dycGNQZXJtaXNzaXZlIjogODg5MywKICAgICAgICAiaW5jb21pbmdOb3RJbktleXZhbCI6IDg5MDMsCiAgICAgICAgImluY29taW5nUGVybWlzc2l2ZSI6IDg4OTAsCiAgICAgICAgImluY29taW5nUmVkaXJlY3QiOiA4OTAxLAogICAgICAgICJpbmNvbWluZ1RjcCI6IDg5MDQsCiAgICAgICAgImluY29taW5nVGNwRGVueSI6IDg5MDUsCiAgICAgICAgImluY29taW5nVGNwUGVybWlzc2l2ZSI6IDg5MDcsCiAgICAgICAgIm91dGdvaW5nVWRwIjogODkwOCwKICAgICAgICAiaW5jb21pbmdVZHAiOiA4OTA5LAogICAgICAgICJtZXRyaWNzIjogODg4NywKICAgICAgICAib3V0Z29pbmciOiA4ODg5LAogICAgICAgICJvdXRnb2luZ0RlZmF1bHRFZ3Jlc3MiOiA4ODk0LAogICAgICAgICJvdXRnb2luZ0dycGMiOiA4ODkyLAogICAgICAgICJvdXRnb2luZ05vdEluS2V5dmFsIjogODkwMiwKICAgICAgICAib3V0Z29pbmdSZWRpcmVjdCI6IDg5MDAsCiAgICAgICAgIm91dGdvaW5nVGNwIjogODkwNiwKICAgICAgICAicGx1c0FwaSI6IDg4ODYsCiAgICAgICAgInJlZGlyZWN0SGVhbHRoUG9ydCI6IDg4OTUsCiAgICAgICAgInJlZGlyZWN0SGVhbHRoUG9ydEhUVFBTIjogODg5NgogICAgICB9LAogICAgICAidHJhbnNwYXJlbnQiOiBmYWxzZQogICAgfSwKICAgICJyZWdpc3RyeUtleU5hbWUiOiAiIiwKICAgICJzaWRlY2FySW1hZ2UiOiB7CiAgICAgICJpbWFnZSI6ICJkb2NrZXItcmVnaXN0cnkubmdpbnguY29tL25zbS9uZ2lueC1tZXNoLXNpZGVjYXI6MS43LjAiLAogICAgICAibmFtZSI6ICJuZ2lueC1tZXNoLXNpZGVjYXIiCiAgICB9LAogICAgInNpZGVjYXJJbml0SW1hZ2UiOiB7CiAgICAgICJpbWFnZSI6ICJkb2NrZXItcmVnaXN0cnkubmdpbnguY29tL25zbS9uZ2lueC1tZXNoLWluaXQ6MS43LjAiLAogICAgICAibmFtZSI6ICJuZ2lueC1tZXNoLWluaXQiCiAgICB9LAogICAgInRyYWNpbmciOiB7fSwKICAgICJ0ZWxlbWV0cnkiOiB7CiAgICAgICAgImV4cG9ydGVycyI6IHsKICAgICAgICAgICAgIm90bHAiOiB7CiAgICAgICAgICAgICAgICAiaG9zdCI6ICJvdGMtY29sbGVjdG9yLm9wZW50ZWxlbWV0cnktb3BlcmF0b3Iuc3ZjIiwKICAgICAgICAgICAgICAgICJwb3J0IjogNDMxNwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAic2FtcGxlclJhdGlvIjogMQogICAgfSwKICAgICJ0cnVzdERvbWFpbiI6ICJleGFtcGxlLm9yZyIKICB9Cg=="
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["secrets", "pods"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments", "daemonsets"]
  verbs: ["list", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["*"]
- apiGroups: ["access.smi-spec.io"]
  resources: ["traffictargets"]
  verbs: ["*"]
- apiGroups: ["specs.smi-spec.io"]
  resources: ["httproutegroups", "tcproutes"]
  verbs: ["*"]
- apiGroups: ["specs.smi.nginx.com"]
  resources: ["ratelimits", "circuitbreakers"]
  verbs: ["*"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  resourceNames: ["sidecar-injector-webhook-cfg.internal.builtin.nsm.nginx"]
  verbs: ["get", "update"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations"]
  resourceNames: ["validating-webhook-cfg.internal.builtin.nsm.nginx"]
  verbs: ["get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-mesh-api.internal.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: nginx-mesh-api
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-mesh-api-svc.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: nginx-mesh-api
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
rules:
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments", "daemonsets"]
  resourceNames: ["spire-server", "spire-agent"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-mesh-api.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-mesh-api.internal.builtin.nsm.nginx
subjects:
- kind: ServiceAccount
  name: nginx-mesh-api
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-mesh-api-svc.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: nginx-mesh-api
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  ports:
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-mesh-webhook
  labels:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  ports:
  - name: admission
    port: 443
    targetPort: 9443
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-mesh-api
  labels:
    app.kubernetes.io/name: nginx-mesh-api
    app.kubernetes.io/part-of: nginx-service-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-mesh-api
      app.kubernetes.io/part-of: nginx-service-mesh
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-mesh-api
        app.kubernetes.io/part-of: nginx-service-mesh
        spiffe.io/spiffeid: "true"
    spec:
      serviceAccountName: nginx-mesh-api
      containers:
      - name: nginx-mesh-api
        image: docker-registry.nginx.com/nsm/nginx-mesh-api:1.7.0
        imagePullPolicy: IfNotPresent
        args:
        - -meshconfig=/etc/config/mesh-config.json
        - -tlsDir=/tmp/webhooks
        - -logtostderr
        - -v=3
        env:
        - name: PULL_POLICY
          value: IfNotPresent
        - name: MY_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsUser: 2102
          capabilities:
            drop:
            - all
            add:
            - NET_ADMIN
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
      volumes:
      - name: config-volume
        configMap:
          name: mesh-config
          items:
          - key: mesh-config.json
            path: mesh-config.json
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: DirectoryOrCreate
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/apiservice: "true"
  name: v1alpha1.nsm.nginx.com
spec:
  group: nsm.nginx.com
  groupPriorityMinimum: 100
  service:
    name: nginx-mesh-api
    namespace: default
    port: 443
  version: v1alpha1
  versionPriority: 100
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: sidecar-injector-webhook-cfg.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/webhook: "true"
webhooks:
- name: nginx-mesh-api.sidecar.injector
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - default
  clientConfig:
    service:
      name: nginx-mesh-webhook
      namespace: default
      path: /inject
  sideEffects: None
  admissionReviewVersions: ["v1"]
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE"]
    resources: ["pods"]
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validating-webhook-cfg.internal.builtin.nsm.nginx
  labels:
    app.kubernetes.io/part-of: nginx-service-mesh
    spiffe.io/webhook: "true"
webhooks:
- name: nginx-mesh-api.policy.validator
  clientConfig:
    service:
      name: nginx-mesh-webhook
      namespace: default
      path: /validate
  sideEffects: None
  admissionReviewVersions: ["v1"]
  rules:
  - apiGroups: ["split.smi-spec.io"]
    apiVersions: ["*"]
    operations: ["CREATE", "UPDATE", "DELETE"]
    resources: ["trafficsplits"]
  - apiGroups: ["specs.smi-spec.io"]
    apiVersions: ["*"]
    operations: ["CREATE", "UPDATE"]
    resources: ["httproutegroups"]
  - apiGroups: ["specs.smi.nginx.com"]
    apiVersions: ["*"]
    operations: ["CREATE", "UPDATE", "DELETE"]
    resources: ["circuitbreakers", "ratelimits"]
---
